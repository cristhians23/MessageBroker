	BROKER SCHEMA MB.System
	
	PATH MB.FrameworkV3;
	
	CREATE COMPUTE MODULE MF_BitacoraParamSvcV1_Compute
		CREATE FUNCTION Main() RETURNS BOOLEAN
		BEGIN
	
			CALL CopyMessageHeaders();
			
			DECLARE REF_IN 		REFERENCE TO InputRoot.XMLNSC.Data.Header;
			DECLARE REF_ENV 	REFERENCE TO Environment.MonitorDEI;
			
			
			DECLARE RefEnv REFERENCE TO Environment;					--Necesario para la funcion que crea las auditorias.
			CREATE FIELD Environment.Variables.Work;		
			DECLARE RefWorkEnv REFERENCE TO Environment.Variables.Work;--Contiene todas las variables de uso temporal o auxiliares.
			CREATE FIELD Environment.Variables.Context;		
			DECLARE RefContextEnv REFERENCE TO Environment.Variables.Context;--Contiene todas las variables de configuracion de contexto.

			DECLARE validaCache  CHARACTER;
			DECLARE mapeoCache  CHARACTER;
			DECLARE mapeoCacheComplejo  CHARACTER;
			DECLARE cacheKey 	CHARACTER;
			DECLARE cacheMap 	CHARACTER;
			DECLARE canal		CHARACTER;
			DECLARE version		CHARACTER;
			DECLARE codApp		CHARACTER;
			DECLARE cabeceraEstandar		CHARACTER;
	
			-- seteando MonitorDEI en el Environment

			SET validaCache = ObtieneCacheMDDI(InputRoot,Environment,'ENVIAMDDI');
			-- metodo que recupera el mapeo de campos
			CALL recuperaParamMapeo(RefEnv,validaCache);
			
			
			SET Environment.MapeoAll.Point1 = 'Inicio';
			-- buscando en cache el key formado por : servicio+version+canal+flagmddi+patron
			SET mapeoCache = ObtieneCacheMDDI(InputRoot,Environment,'MAPPINGMDDI');
			SET Environment.MapeoAll.Point2.mapeoCache = mapeoCache;
			SET Environment.MapeoAll.Point3 = 'Fin';
			
			-- buscando en cache el key formado por : servicio+version+canal+flagmddi+patron
			SET mapeoCacheComplejo = ObtieneCacheMDDI(InputRoot,Environment,'MAPPINGCOMPMDDI');
            SET Environment.MapeoComplejo.Point2.mapeoCache = mapeoCacheComplejo;
			
			-- modificando la cola de destino segun el servicio+version+canal
			--SET OutputRoot.MQMD.ReplyToQMgr = '';
			SET OutputRoot.MQMD.ReplyToQ    = Environment.Variables.Mapeo.Mensaje.ENDPOINT_MDDI;

			CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'XMLNSC';
			CREATE LASTCHILD OF OutputRoot.XMLNSC TYPE Name NAME 'MonitorDEI';
			DECLARE REF_OUT REFERENCE TO OutputRoot.XMLNSC.MonitorDEI;
			--SET REF_OUT.MsgId = REF_IN.Mapeo.MsgId;
			
			IF COALESCE(InputRoot.XMLNSC.Auditoria.MarcaMonitor,'0') = '1' THEN
				SET REF_OUT.Request= REF_IN.Data;
			ELSE
				SET REF_OUT.Request= REF_IN.DataRq;
				SET REF_OUT.Response= REF_IN.Data;		
			END IF;
			
			
			--DECLARE fechaOpe,horaOpe,idEstrO,idVersionO,idEstrD,idCanal,RqUID		CHARACTER;
			-- preparando la cabecera estandar de la trama que se enviara a MDDI
			DECLARE largoServicioS,largoServicioV INT;
			-- recuperando el RqUID
			DECLARE REF_RQ 		REFERENCE TO InputRoot.XMLNSC.Auditoria.DataRq;
			DECLARE C_NS_MESSAGES_MFX CHARACTER REF_IN.Mapeo.ENDPOINT;
	        DECLARE mfx NAMESPACE C_NS_MESSAGES_MFX;
	        DECLARE TAG_BASE CHARACTER REF_IN.Mapeo.TAG_BASE;
			SET REF_OUT.rqID   			    = InputRoot.XMLNSC.Data.Header.MsgId;
			SET REF_OUT.canal   			= InputRoot.XMLNSC.Data.Header.Canal;
			SET REF_OUT.version   			= InputRoot.XMLNSC.Data.Header.Version;
			SET REF_OUT.servicio   			= InputRoot.XMLNSC.Data.Header.Servicio;
			SET REF_OUT.mapeo				= mapeoCache;
			SET REF_OUT.namespace	 		= Environment.Variables.Mapeo.Mensaje.ENDPOINT;
			SET REF_OUT.colaSalida 			= Environment.Variables.Mapeo.Mensaje.ENDPOINT_MDDI;
			SET REF_OUT.codigoEvento 		= Environment.Variables.Mapeo.Mensaje.ESTRUCTURA_D;
			SET REF_OUT.request		 		= InputRoot.XMLNSC.Data.Request;
			SET REF_OUT.response	 		= InputRoot.XMLNSC.Data.Response;
			
			--Auditoria: Inicio., evento 3.		
			SET Environment.Variables.Work.RqID   = InputRoot.XMLNSC.Data.Header.MsgId;
			
			SET RefContextEnv.IdAppOrigen 	= '';
			SET RefContextEnv.DesAppOrigen  = '';
			SET RefContextEnv.IdAppDestino 	= 'MBRK';
			SET RefContextEnv.DesAppDestino = 'Message Broker';
			SET RefContextEnv.IdEvento 		= C_EV_REQUEST;
			SET RefContextEnv.IdError 		= '0';
			SET RefContextEnv.IdCanal 		= 'MB';
			CALL BuildAuditoria(RefEnv,C_EV_REQ_INICIAL,InputRoot.XMLNSC,NULL,'XMLNSC');
			--Auditoria:Inicio evento 3.	
			RETURN TRUE;
		END;
	
		CREATE PROCEDURE CopyMessageHeaders() BEGIN
			DECLARE I INTEGER 1;
			DECLARE J INTEGER;
			SET J = CARDINALITY(InputRoot.*[]);
			WHILE I < J DO
				SET OutputRoot.*[I] = InputRoot.*[I];
				SET I = I + 1;
			END WHILE;
		END;
	
		CREATE PROCEDURE CopyEntireMessage() BEGIN
			SET OutputRoot = InputRoot;
		END;
		
		
	-- solo funciona para una cadena que contenga ||
	CREATE PROCEDURE recuperaParamMapeo(INOUT RefEnv REFERENCE,IN cadena CHARACTER)
	
	BEGIN
		
		DECLARE RefParamMapeo REFERENCE TO RefEnv.Variables.Mapeo;
		CREATE LASTCHILD OF RefEnv.Variables.Mapeo AS RefParamMapeo NAME 'Mensaje';
		
		--DECLARE cadena 				CHARACTER;
		DECLARE longitud 		INTEGER;
		DECLARE posicion 		INTEGER   0;
		DECLARE posSiguiente    INTEGER   0;
		DECLARE contadorPipe 	INTEGER   0;
		DECLARE contadorCampo 	INTEGER   1;
		DECLARE caracter 		CHARACTER '';
		DECLARE tempoSalida 	CHARACTER '';
		DECLARE caractPipe		CHARACTER '|';
		DECLARE caractVacio		CHARACTER '';
		
		SET RefParamMapeo.Point0 = cadena;
		SET longitud 		=  LENGTH(cadena);
		SET posicion 		= 1;
		SET contadorPipe 	= 0;
		
--		SET RefParamMapeo.Point1 = 'Inicio';
		
		WHILE  posicion<=longitud DO
			--SET posSiguiente 	= posicion+1;
			SET caracter 		= SUBSTRING(cadena FROM posicion FOR 1);
			IF caracter<>caractPipe THEN
				SET tempoSalida = tempoSalida||caracter;
			ELSE
				SET contadorPipe = contadorPipe+1;
				IF contadorPipe = 2 THEN
					IF tempoSalida<>caractVacio THEN
						-- adiciona elemento con datos a estructura de datos
						IF contadorCampo = 1 THEN
							SET RefParamMapeo.FLAG_MDDI = COALESCE(tempoSalida,'');						
						END IF;
						IF contadorCampo = 2 THEN
							SET RefParamMapeo.PATRON_MDDI = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 3 THEN
							SET RefParamMapeo.FLAG_ACTIVO = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 4 THEN
							SET RefParamMapeo.ENDPOINT = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 5 THEN
							SET RefParamMapeo.ENDPOINT_SALIDA = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 6 THEN
							SET RefParamMapeo.ENDPOINT_MDDI = COALESCE(tempoSalida,'');
						END IF;
						SET contadorCampo = contadorCampo+1;
						SET tempoSalida  = '';
						SET contadorPipe = 0;
					ELSE
						-- adiciona elemento con datos a estructura de datos
						IF contadorCampo = 1 THEN
							SET RefParamMapeo.FLAG_MDDI = COALESCE(tempoSalida,'');						
						END IF;
						IF contadorCampo = 2 THEN
							SET RefParamMapeo.PATRON_MDDI = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 3 THEN
							SET RefParamMapeo.FLAG_ACTIVO = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 4 THEN
							SET RefParamMapeo.ENDPOINT = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 5 THEN
							SET RefParamMapeo.ENDPOINT_SALIDA = COALESCE(tempoSalida,'');
						END IF;
						IF contadorCampo = 6 THEN
							SET RefParamMapeo.ENDPOINT_MDDI = COALESCE(tempoSalida,'');
						END IF;
						SET contadorCampo = contadorCampo+1;
						SET tempoSalida  = '';
						SET contadorPipe = 0;
					END IF;
				END IF;
			END IF;
			SET posicion 	= posicion+1;
			SET caracter 		= '';
		END WHILE;
		
		-- No borrar, es el ultimo campo de la lista
		IF contadorCampo = 7 THEN
			SET RefParamMapeo.ESTRUCTURA_D = COALESCE(tempoSalida,'');
		END IF;

		END;
		
		
		CREATE FUNCTION ObtieneCacheMDDI(IN InputRoot REFERENCE,IN Environment REFERENCE,IN Filtro CHARACTER) RETURNS CHARACTER
		BEGIN
			DECLARE canal			CHARACTER;
			DECLARE version			CHARACTER;
			DECLARE codApp			CHARACTER;
			DECLARE cacheMap		CHARACTER;
			DECLARE cacheKey		CHARACTER;
			DECLARE valorCache		CHARACTER;
			SET canal                                                = InputRoot.XMLNSC.Data.Header.Canal;
			SET codApp                                               = InputRoot.XMLNSC.Data.Header.Servicio;
			SET version                                              = InputRoot.XMLNSC.Data.Header.Version;
			
			IF Filtro = 'ENVIAMDDI' THEN
				SET cacheMap 						   				 = C_PREFIJO||TRIM(codApp)||TRIM(version)||TRIM(canal);												  
				SET cacheKey 						   				 = C_PREFIJO||TRIM(codApp)||TRIM(version)||TRIM(canal)||
														  		       C_FLAG_MDDI_ACTIVO||C_FLAG_PATRON9_ACTIVO||C_FLAG_MAPEO_ACTIVO;	
			ELSEIF Filtro = 'MAPPINGMDDI' THEN
				SET cacheMap 						   				= C_PREFIJO_MAP_ALL||TRIM(codApp)||TRIM(version)||TRIM(canal);												  
				SET cacheKey 						   				= C_PREFIJO_MAP_ALL||TRIM(codApp)||TRIM(version)||TRIM(canal);
			
		    ELSEIF Filtro = 'MAPPINGCOMPMDDI' THEN
				SET cacheMap 						   				= C_PREFIJO_MAP_COMP||TRIM(codApp)||TRIM(version)||TRIM(canal);												  
				SET cacheKey 						   				= C_PREFIJO_MAP_COMP||TRIM(codApp)||TRIM(version)||TRIM(canal);
			END IF; 

			SET valorCache = getCacheValue(cacheMap,cacheKey);
			RETURN valorCache;
		END;
		
		
		
		
		
				
	END MODULE;
	
		